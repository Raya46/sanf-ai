(()=>{var e={};e.id=413,e.ids=[413],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},78335:()=>{},93285:(e,t,s)=>{"use strict";s.r(t),s.d(t,{patchFetch:()=>j,routeModule:()=>T,serverHooks:()=>E,workAsyncStorage:()=>C,workUnitAsyncStorage:()=>H});var r={};s.r(r),s.d(r,{POST:()=>k});var i=s(96559),a=s(48088),n=s(37719);let o=new TextEncoder,h={appstream2:"appstream",cloudhsmv2:"cloudhsm",email:"ses",marketplace:"aws-marketplace",mobile:"AWSMobileHubService",pinpoint:"mobiletargeting",queue:"sqs","git-codecommit":"codecommit","mturk-requester-sandbox":"mturk-requester","personalize-runtime":"personalize"},c=new Set(["authorization","content-type","content-length","user-agent","presigned-expires","expect","x-amzn-trace-id","range","connection"]);class l{constructor({accessKeyId:e,secretAccessKey:t,sessionToken:s,service:r,region:i,cache:a,retries:n,initRetryMs:o}){if(null==e)throw TypeError("accessKeyId is a required option");if(null==t)throw TypeError("secretAccessKey is a required option");this.accessKeyId=e,this.secretAccessKey=t,this.sessionToken=s,this.service=r,this.region=i,this.cache=a||new Map,this.retries=null!=n?n:10,this.initRetryMs=o||50}async sign(e,t){if(e instanceof Request){let{method:s,url:r,headers:i,body:a}=e;null==(t=Object.assign({method:s,url:r,headers:i},t)).body&&i.has("Content-Type")&&(t.body=null!=a&&i.has("X-Amz-Content-Sha256")?a:await e.clone().arrayBuffer()),e=r}let s=new u(Object.assign({url:e.toString()},t,this,t&&t.aws)),r=Object.assign({},t,await s.sign());delete r.aws;try{return new Request(r.url.toString(),r)}catch(e){if(e instanceof TypeError)return new Request(r.url.toString(),Object.assign({duplex:"half"},r));throw e}}async fetch(e,t){for(let s=0;s<=this.retries;s++){let r=fetch(await this.sign(e,t));if(s===this.retries)return r;let i=await r;if(i.status<500&&429!==i.status)return i;await new Promise(e=>setTimeout(e,Math.random()*this.initRetryMs*Math.pow(2,s)))}throw Error("An unknown error occurred, ensure retries is not negative")}}class u{constructor({method:e,url:t,headers:s,body:r,accessKeyId:i,secretAccessKey:a,sessionToken:n,service:o,region:l,cache:u,datetime:d,signQuery:p,appendSessionToken:g,allHeaders:m,singleEncode:f}){let w,S;if(null==t)throw TypeError("url is a required option");if(null==i)throw TypeError("accessKeyId is a required option");if(null==a)throw TypeError("secretAccessKey is a required option");this.method=e||(r?"POST":"GET"),this.url=new URL(t),this.headers=new Headers(s||{}),this.body=r,this.accessKeyId=i,this.secretAccessKey=a,this.sessionToken=n,o&&l||([w,S]=function(e,t){let{hostname:s,pathname:r}=e;if(s.endsWith(".on.aws")){let e=s.match(/^[^.]{1,63}\.lambda-url\.([^.]{1,63})\.on\.aws$/);return null!=e?["lambda",e[1]||""]:["",""]}if(s.endsWith(".r2.cloudflarestorage.com"))return["s3","auto"];if(s.endsWith(".backblazeb2.com")){let e=s.match(/^(?:[^.]{1,63}\.)?s3\.([^.]{1,63})\.backblazeb2\.com$/);return null!=e?["s3",e[1]||""]:["",""]}let i=s.replace("dualstack.","").match(/([^.]{1,63})\.(?:([^.]{0,63})\.)?amazonaws\.com(?:\.cn)?$/),a=i&&i[1]||"",n=i&&i[2];if("us-gov"===n)n="us-gov-west-1";else if("s3"===n||"s3-accelerate"===n)n="us-east-1",a="s3";else if("iot"===a)a=s.startsWith("iot.")?"execute-api":s.startsWith("data.jobs.iot.")?"iot-jobs-data":"/mqtt"===r?"iotdevicegateway":"iotdata";else if("autoscaling"===a){let e=(t.get("X-Amz-Target")||"").split(".")[0];"AnyScaleFrontendService"===e?a="application-autoscaling":"AnyScaleScalingPlannerFrontendService"===e&&(a="autoscaling-plans")}else null==n&&a.startsWith("s3-")?(n=a.slice(3).replace(/^fips-|^external-1/,""),a="s3"):a.endsWith("-fips")?a=a.slice(0,-5):n&&/-\d$/.test(a)&&!/-\d$/.test(n)&&([a,n]=[n,a]);return[h[a]||a,n||""]}(this.url,this.headers)),this.service=o||w||"",this.region=l||S||"us-east-1",this.cache=u||new Map,this.datetime=d||new Date().toISOString().replace(/[:-]|\.\d{3}/g,""),this.signQuery=p,this.appendSessionToken=g||"iotdevicegateway"===this.service,this.headers.delete("Host"),"s3"!==this.service||this.signQuery||this.headers.has("X-Amz-Content-Sha256")||this.headers.set("X-Amz-Content-Sha256","UNSIGNED-PAYLOAD");let A=this.signQuery?this.url.searchParams:this.headers;if(A.set("X-Amz-Date",this.datetime),this.sessionToken&&!this.appendSessionToken&&A.set("X-Amz-Security-Token",this.sessionToken),this.signableHeaders=["host",...this.headers.keys()].filter(e=>m||!c.has(e)).sort(),this.signedHeaders=this.signableHeaders.join(";"),this.canonicalHeaders=this.signableHeaders.map(e=>e+":"+("host"===e?this.url.host:(this.headers.get(e)||"").replace(/\s+/g," "))).join("\n"),this.credentialString=[this.datetime.slice(0,8),this.region,this.service,"aws4_request"].join("/"),this.signQuery&&("s3"!==this.service||A.has("X-Amz-Expires")||A.set("X-Amz-Expires","86400"),A.set("X-Amz-Algorithm","AWS4-HMAC-SHA256"),A.set("X-Amz-Credential",this.accessKeyId+"/"+this.credentialString),A.set("X-Amz-SignedHeaders",this.signedHeaders)),"s3"===this.service)try{this.encodedPath=decodeURIComponent(this.url.pathname.replace(/\+/g," "))}catch(e){this.encodedPath=this.url.pathname}else this.encodedPath=this.url.pathname.replace(/\/+/g,"/");f||(this.encodedPath=encodeURIComponent(this.encodedPath).replace(/%2F/g,"/")),this.encodedPath=y(this.encodedPath);let b=new Set;this.encodedSearch=[...this.url.searchParams].filter(([e])=>{if(!e)return!1;if("s3"===this.service){if(b.has(e))return!1;b.add(e)}return!0}).map(e=>e.map(e=>y(encodeURIComponent(e)))).sort(([e,t],[s,r])=>e<s?-1:e>s?1:t<r?-1:+(t>r)).map(e=>e.join("=")).join("&")}async sign(){return this.signQuery?(this.url.searchParams.set("X-Amz-Signature",await this.signature()),this.sessionToken&&this.appendSessionToken&&this.url.searchParams.set("X-Amz-Security-Token",this.sessionToken)):this.headers.set("Authorization",await this.authHeader()),{method:this.method,url:this.url,headers:this.headers,body:this.body}}async authHeader(){return["AWS4-HMAC-SHA256 Credential="+this.accessKeyId+"/"+this.credentialString,"SignedHeaders="+this.signedHeaders,"Signature="+await this.signature()].join(", ")}async signature(){let e=this.datetime.slice(0,8),t=[this.secretAccessKey,e,this.region,this.service].join(),s=this.cache.get(t);if(!s){let r=await d("AWS4"+this.secretAccessKey,e),i=await d(r,this.region),a=await d(i,this.service);s=await d(a,"aws4_request"),this.cache.set(t,s)}return m(await d(s,await this.stringToSign()))}async stringToSign(){return["AWS4-HMAC-SHA256",this.datetime,this.credentialString,m(await p(await this.canonicalString()))].join("\n")}async canonicalString(){return[this.method.toUpperCase(),this.encodedPath,this.encodedSearch,this.canonicalHeaders+"\n",this.signedHeaders,await this.hexBodyHash()].join("\n")}async hexBodyHash(){let e=this.headers.get("X-Amz-Content-Sha256")||("s3"===this.service&&this.signQuery?"UNSIGNED-PAYLOAD":null);if(null==e){if(this.body&&"string"!=typeof this.body&&!("byteLength"in this.body))throw Error("body must be a string, ArrayBuffer or ArrayBufferView, unless you include the X-Amz-Content-Sha256 header");e=m(await p(this.body||""))}return e}}async function d(e,t){let s=await crypto.subtle.importKey("raw","string"==typeof e?o.encode(e):e,{name:"HMAC",hash:{name:"SHA-256"}},!1,["sign"]);return crypto.subtle.sign("HMAC",s,o.encode(t))}async function p(e){return crypto.subtle.digest("SHA-256","string"==typeof e?o.encode(e):e)}let g=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"];function m(e){let t=new Uint8Array(e),s="";for(let e=0;e<t.length;e++){let r=t[e];s+=g[r>>>4&15],s+=g[15&r]}return s}function y(e){return e.replace(/[!'()*]/g,e=>"%"+e.charCodeAt(0).toString(16).toUpperCase())}var f=s(32190);let w=process.env.R2_ACCESS_KEY_ID||"",S=process.env.R2_SECRET_ACCESS_KEY||"",A=process.env.R2_ACCOUNT_ID||"",b=process.env.R2_BUCKET_NAME||"",v=`https://${A}.r2.cloudflarestorage.com`;w&&S&&A&&b||console.error("R2 configuration missing in environment variables");let x=new l({accessKeyId:w,secretAccessKey:S,service:"s3",region:"auto"});async function k(e){try{let t=await e.formData(),s=t.get("file"),r=t.get("key");if(!s||!r)return f.NextResponse.json({error:"File or key not provided."},{status:400});let i=Buffer.from(await s.arrayBuffer()),a=`${v}/${b}/${r}`,n=await x.fetch(a,{method:"PUT",headers:{"Content-Type":s.type,"Content-Length":i.length.toString()},body:i});if(!n.ok){let e=await n.text();throw console.error(`S3 upload failed: ${n.status} ${n.statusText}`,{errorText:e}),Error(`S3 upload failed: ${n.status} ${n.statusText}`)}let o=`${v}/${b}/${r}`;return f.NextResponse.json({success:!0,url:o,key:r})}catch(t){let e=t instanceof Error?t.message:"Unknown error";return console.error("Server: Error uploading file:",e),f.NextResponse.json({error:e},{status:500})}}let T=new i.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/upload/route",pathname:"/api/upload",filename:"route",bundlePath:"app/api/upload/route"},resolvedPagePath:"D:\\College\\Hackathon\\sanf-ai\\src\\app\\api\\upload\\route.ts",nextConfigOutput:"standalone",userland:r}),{workAsyncStorage:C,workUnitAsyncStorage:H,serverHooks:E}=T;function j(){return(0,n.patchFetch)({workAsyncStorage:C,workUnitAsyncStorage:H})}},96487:()=>{}};var t=require("../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),r=t.X(0,[447,580],()=>s(93285));module.exports=r})();